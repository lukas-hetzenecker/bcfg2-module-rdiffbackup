<?python
  from genshi.template import TemplateError
 
  ################################
  # THESE ARE THE DEFAULT VALUES #
  ################################

  backup_directory = "/srv/rdiff-backup-bcfg2"
  max_process = 5
 
  #######
  # END #
  #######
  
  configs = dict()
  servers = list()
  
  def matches_me(container):
    if container.tag == 'Group':
      negate = container.get('negate', 'false').lower() == 'true'
      return metadata.inGroup(container.get('name')) ^ negate
    elif container.tag == 'Client':
      negate = container.get('negate', 'false').lower() == 'true'
      return (container.get('name') == metadata.hostname) ^ negate
    return False
  
  def parse_clients(current_parsed_clients, elements):
    for el in elements:
      if el.tag == 'BackupServer':
        dir = el.get('backup_directory', backup_directory)
        process = el.get('max_process', max_process)
        servers += [ (client, dir, process) for client in current_parsed_clients ]
      elif el.tag == 'BackupConfig':
        for client in current_parsed_clients:
          if client not in configs:
            configs[client] = list()
          configs[client].append(
            {
              'path' : ":".join([path_el.get('path') for path_el in el]),
              'destination' : el.get('destination'),
              'enable' : el.get('enable', 'true'),
              'args' : el.get('args', 'true'),
              'retention' : el.get('retention', '30D')
            }
          )
      elif el.tag in ('Group', 'Client'):
        negate = el.get('negate', 'false').lower() == 'true'
        if el.tag == 'Group':
          clients = metadata.query.names_by_groups([el.get('name')])
        elif el.tag == 'Client':
          clients = ( el.get('name'), )
        
        old_current_parsed_clients = current_parsed_clients
        if negate:
          current_parsed_clients = current_parsed_clients.difference(clients)
        else:
          current_parsed_clients = current_parsed_clients.intersection(clients)
        parse_clients(current_parsed_clients, el)
        current_parsed_clients = old_current_parsed_clients
  
  try:
    backups_xml = metadata.Properties['backups.xml'].xdata
  except AttributeError: # We're running on Bcfg2 1.1.x or earlier.
    backups_xml = metadata.Properties['backups.xml'].data
  
  all_clients = set(metadata.query.all_clients())
  parse_clients(all_clients, backups_xml)

  hostname = metadata.hostname
  server_hostnames = [ server for server, dir, process in servers ]
  client_hostnames = [ client for client in configs.iterkeys() ]

?>

<Bundle name="backup" xmlns:py="http://genshi.edgewall.org/">
  <py:if test="hostname in server_hostnames">
    <py:for each="(client, configs) in configs.items()">
      <py:for each="(num, config) in enumerate(configs)">

        <BoundPath
          type="directory"
          name="/etc/rdiff-backup.d-bcfg2"
          owner="root"
          group="root"
          perms="700" />

        <BoundPath
          type="file"
          name="/etc/rdiff-backup.d-bcfg2/$client-${num}.conf"
          owner="root"
          group="root"
          perms="700"
          paranoid="true"
        ># file managed by bcfg2
#
# host configuration used by script multiprocessing-rdiff-backup.py
#

[hostconfig]
host = $client
version = 1.3.3
enable = $config.enable
source = root@$client::$config.path
destination = $config.destination
args = $config.args
retention = $config.retention
</BoundPath>

      </py:for>
    </py:for>
  </py:if>

  <py:if test="hostname in client_hostnames">
    <!-- <Package name='rdiff-backup' /> -->
  </py:if>

</Bundle>

<!-- vim:set expandtab softtabstop=2 shiftwidth=2 textwidth=80: -->
